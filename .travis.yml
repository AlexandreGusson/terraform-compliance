language: python
python:
  - '2.7'
jobs:
  include:
    - stage: Test
      provider: script
      script: py.test -v

    - stage: Build & Deploy (PYPI)
      script: "echo 'PYPI Build & Deploy'"
      deploy:
          skip_cleanup: true
          provider: pypi
          user: env(PYPI_USER)
          pass: env(PYPI_PASS)
          distributions: "sdist bdist_wheel"
          on:
            branch: travis_test
            type: pull_request
            fork: false

    - stage: Build & Deploy (Docker)
      script: "echo 'Docker Build & Deploy'"
      deploy:
          skip_cleanup: true
          services: docker
          env:
            - IMAGE_NAME = "eerkunt/terraform-compliance"
          on:
            branch: travis_test
            type: pull_request
            fork: false

          script:
            - docker build -t "$IMAGE_NAME" .
            - echo "export RELEASE_VERSION=$(docker run --rm "$IMAGE_NAME" -v)" > reqs.sh
            - source reqs.sh
            - sed s/__VERSION__/"RELEASE_VERSION"/ Dockerfile.template > Dockerfile
            - docker images
            - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASS"
            - docker tag "$IMAGE_NAME" eerkunt/terraform-compliance:travis
            - docker tag "$IMAGE_NAME" "$IMAGE_NAME":"$RELEASE_VERSION"
            - docker push "$IMAGE_NAME":travis
            - docker push "$IMAGE_NAME":"$RELEASE_VERSION"

    - stage: Release (GitHub)
      script: "echo 'Releasing to GitHub'"
      before_deploy:
          # Set up git user name and tag this commit
          - git config --local user.name "Emre Erkunt"
          - git config --local user.email "emre.erkunt@gmail.com"
          - echo "export RELEASE_VERSION=$(docker run --rm "$IMAGE_NAME" -v)" > reqs.sh
          - source reqs.sh
          - git tag "$RELEASE_VERSION"
      deploy:
          skip_cleanup: true
          provider: releases
          api_key: $GITHUB_OAUTH_TOKEN
          skip_cleanup: true
          on:
            branch: travis_test
            type: pull_request
            fork: false